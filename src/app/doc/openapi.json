{
  "openapi": "3.0.0",
  "info": {
    "title": "VLibras Translator API",
    "description": "VLibras Translator is an open source API developed for automatic translation from Brazillian Portuguese to Brazilian Sign Language (LIBRAS)",
    "contact": {
      "email": "vlibras@lavid.ufpb.br"
    },
    "license": {
      "name": "GNU Lesser General Public License v3.0",
      "url": "https://www.gnu.org/licenses/lgpl-3.0.html"
    },
    "version": "2.3.0"
  },
  "servers": [
    {
      "url": "http://traducao2.vlibras.gov.br",
      "description": "VLibras Translator v2 Brazilian Government Server"
    },
    {
      "url": "http://localhost:3000",
      "description": "VLibras Translator Localhost Server"
    }
  ],
  "tags": [
    {
      "name": "translations",
      "description": "Automatic translation from Brazillian Portuguese to LIBRAS"
    },
    {
      "name": "reviews",
      "description": "Human revision of VLibras Translator translations"
    },
    {
      "name": "videos",
      "description": "Automatic generation of LIBRAS videos"
    }
  ],
  "paths": {
    "/translate": {
      "post": {
        "tags": [
          "translations"
        ],
        "summary": "Translates a text to text",
        "description": "Translates a text written in Brazillian Portuguese to an equivalent text in LIBRAS.",
        "operationId": "translateText",
        "requestBody": {
          "description": "Text to translate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Translate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Text translated",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TranslatedText"
                }
              }
            }
          },
          "422": {
            "description": "Received an invalid body param",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidParams"
                }
              }
            }
          },
          "500": {
            "description": "Internal processing error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/review": {
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Submits a review of translated text",
        "description": "Submits a review of the text translated by the VLibras Translation Service.",
        "operationId": "reviewTranslation",
        "requestBody": {
          "description": "Review of the translated text",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Review"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Review submited",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSubmited"
                }
              }
            }
          },
          "422": {
            "description": "Received an invalid body param",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidParams"
                }
              }
            }
          },
          "500": {
            "description": "Internal processing error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/video": {
      "post": {
        "tags": [
          "videos"
        ],
        "summary": "Generates a LIBRAS video",
        "description": "Generates a LIBRAS video from a previously translated text.",
        "operationId": "videoGeneration",
        "requestBody": {
          "description": "Translated text and parameters to generate the video",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Video"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Generating video",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoGenerationRequest"
                }
              }
            }
          },
          "422": {
            "description": "Received an invalid body param",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidParams"
                }
              }
            }
          },
          "500": {
            "description": "Internal processing error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/video/status/{requestUID}": {
      "get": {
        "tags": [
          "videos"
        ],
        "summary": "Gets the status of a LIBRAS video generation",
        "description": "Gets the current status of a LIBRAS video generation process.",
        "operationId": "videoGenerationStatus",
        "parameters": [
          {
            "name": "requestUID",
            "in": "path",
            "description": "Request unique identifier",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/requestUID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Video generation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoGenerationStatus"
                }
              }
            }
          },
          "404": {
            "description": "Process not found with the UID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestUID"
                }
              }
            }
          },
          "422": {
            "description": "Received an invalid url param",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidParams"
                }
              }
            }
          }
        }
      }
    },
    "/video/download/{requestUID}": {
      "get": {
        "tags": [
          "videos"
        ],
        "summary": "Downloads a generated LIBRAS video",
        "description": "Downloads a generated LIBRAS video, the file will be available for 1 hour.",
        "operationId": "downloadGeneratedVideo",
        "parameters": [
          {
            "name": "requestUID",
            "in": "path",
            "description": "Request unique identifier",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/requestUID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Video file downloaded",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Video not found",
            "content": {
              "application/json": {
                "examples": {
                  "VideoNotfound": {
                    "value": {
                      "error": "There is no video with the received UID"
                    }
                  },
                  "VideoNotGenerated": {
                    "value": {
                      "error": "Video not generated"
                    }
                  },
                  "VideoExpired": {
                    "value": {
                      "error": "Video expired"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Received an invalid url param",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidParams"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Translate": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "example": "o rato roeu a roupa do rei de roma"
          }
        }
      },
      "TranslatedText": {
        "type": "string",
        "example": "RATO ROER ROUPA REI ROMA"
      },
      "Review": {
        "required": [
          "rating",
          "text",
          "translation"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "example": "o rato roeu a roupa do rei de roma"
          },
          "translation": {
            "type": "string",
            "example": "RATO ROER ROUPA REI ROMA"
          },
          "rating": {
            "type": "string",
            "example": "bad",
            "enum": [
              "good",
              "bad"
            ]
          },
          "review": {
            "type": "string",
            "example": "RATO ROER ROUPA REI ROMA"
          }
        }
      },
      "ReviewSubmited": {
        "type": "string",
        "example": "OK"
      },
      "Video": {
        "required": [
          "gloss",
          "avatar",
          "caption"
        ],
        "type": "object",
        "properties": {
          "gloss": {
            "type": "string",
            "example": "RATO ROER ROUPA REI ROMA"
          },
          "avatar": {
            "type": "string",
            "example": "icaro",
            "enum": [
              "icaro",
              "hozana"
            ]
          },
          "caption": {
            "type": "string",
            "example": "enable",
            "enum": [
              "enable",
              "disable"
            ]
          }
        }
      },
      "VideoGenerationRequest": {
        "required": [
          "requestUID"
        ],
        "type": "object",
        "properties": {
          "requestUID": {
            "type": "string",
            "example": "c6730846-5d8e-4803-a38a-9cac921c9a04"
          }
        }
      },
      "VideoGenerationStatus": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "generated",
            "enum": [
              "queued",
              "processing",
              "generated",
              "failed"
            ]
          },
          "size": {
            "type": "integer",
            "example": 483214
          }
        }
      },
      "requestUID": {
        "type": "string",
        "example": "c6730846-5d8e-4803-a38a-9cac921c9a04"
      },
      "File": {
        "type": "string",
        "format": "binary",
        "example": "OK"
      },
      "InvalidRequestUID": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "example": "There is no Process With the Received UID"
          }
        }
      },
      "InvalidParams": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "example": "Unprocessable Entity"
          }
        }
      },
      "InternalError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "example": "<Reason of the Internal Error>"
          }
        }
      }
    }
  }
}
